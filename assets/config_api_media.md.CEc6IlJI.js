import{_ as a,c as i,o,ag as t}from"./chunks/framework.LkKBe053.js";const u=JSON.parse('{"title":"Media","description":"","frontmatter":{},"headers":[],"relativePath":"config/api/media.md","filePath":"config/api/media.md"}'),d={name:"config/api/media.md"};function r(l,e,c,n,s,p){return o(),i("div",null,[...e[0]||(e[0]=[t('<h1 id="media" tabindex="-1">Media <a class="header-anchor" href="#media" aria-label="Permalink to &quot;Media&quot;">​</a></h1><p>Path: Path: <code>apps/api/src/config/media.ts</code></p><p>Media implementation supports the following storage:</p><ul><li><code>Local</code> - stores media files on the local filesystem</li></ul><h2 id="storage-provider" tabindex="-1">Storage Provider <a class="header-anchor" href="#storage-provider" aria-label="Permalink to &quot;Storage Provider&quot;">​</a></h2><p>Storage provider for media files.</p><ul><li>object-path: <code>storage.provider</code></li><li>dotenv var: <code>MEDIA_PROVIDER</code></li><li>type: <code>string</code></li><li>default: <code>&#39;local&#39;</code></li></ul><h3 id="media-public-location" tabindex="-1">Media public location <a class="header-anchor" href="#media-public-location" aria-label="Permalink to &quot;Media public location&quot;">​</a></h3><p>Storage location for public media files.</p><ul><li>object-path: <code>storage[provider].public</code></li><li>dotenv var: <code>MEDIA_PUBLIC</code></li><li>type: <code>string</code></li><li>default: <code>&#39;storage/public/media&#39;</code></li></ul><h3 id="media-private-location" tabindex="-1">Media private location <a class="header-anchor" href="#media-private-location" aria-label="Permalink to &quot;Media private location&quot;">​</a></h3><p>Storage location for private media files.</p><ul><li>object-path: <code>storage[provider].private</code></li><li>dotenv var: <code>MEDIA_PRIVATE</code></li><li>type: <code>string</code></li><li>default: <code>&#39;storage/private/media&#39;</code></li></ul><h2 id="media-conversions" tabindex="-1">Media Conversions <a class="header-anchor" href="#media-conversions" aria-label="Permalink to &quot;Media Conversions&quot;">​</a></h2><p>Media conversions are used to generate different formats of media files.</p><ul><li>object-path: <code>storage.conversions[conversion].width</code></li></ul>',16)])])}const h=a(d,[["render",r]]);export{u as __pageData,h as default};
